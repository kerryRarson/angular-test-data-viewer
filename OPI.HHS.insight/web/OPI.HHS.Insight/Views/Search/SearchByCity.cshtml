<div class="container">
    <div class="row">
        <div class="alert alert-danger" role="alert" ng-show="showAjaxError">
            <span class="glyphicon glyphicon-exclamation-sign" aria-hidden="true"></span>
            <span class="sr-only">Error:</span>
            {{ajaxError}}
        </div>
    </div>
    <div class="row">
        <div class="col-md-5">
            @*<p> look at this article: http://weblogs.asp.net/dwahlin/using-an-angularjs-factory-to-interact-with-a-restful-service</p>*@
            <form name="searchForm" ng-submit="searchByCity()" class="form-inline">
                <fieldset ng-disabled="searching">
                    <div class="form-group">
                        <select ng-options="st for st in states" ng-model="searchState" required class="form-control"></select>
                        <input ng-model="searchCity" ng-bind="searchCity" type="text" required placeholder="City" class="form-control" />
                        <button type="submit" class="btn btn-primary">
                            <span class="glyphicon glyphicon-search" aria-hidden="true"> Search</span>
                        </button>
                    </div>
                </fieldset>
            </form>
        </div>
        <div class="col-md-7">
            <div ng-show="searching"><img src="~/Content/images/progress.gif" />&nbsp; Searching...</div>
        </div>
    </div>
    <p></p>

    <div class="row">
        <div class="panel panel-default">
            <div class="panel-heading">{{ searchResults.length}} Addresses</div>
            <div class="panel-body">
                <table class="table table-striped table-responsive">
                        <tr>
                            <th>Case #</th>
                            <th>Address</th>
                            <th>Phone</th>
                            <th></th>
                        </tr>
                        <tbody>
                            <tr data-ng-repeat="r in searchResults">
                                <td><a ng-href="{{ buildPeopleUrl(r.Case)}}">{{r.Case}}</a></td>
                                <td>{{ r.FormattedAddress }}</td>
                                <td>{{ r.Phone }}</td>
                                <td><a ng-show="r.Lat != ''" ng-click="launchMap(r.Lon, r.Lat)"><span class="glyphicon glyphicon-map-marker"></span></a></td>
                            </tr>
                        </tbody>
                    </table>
            </div>
        </div>

        </div>
</div>
    
@*<script src="https://maps.google.com/maps/api/js?sensor=false"></script>
<script>

</script>*@
    @*
        map example from http://plnkr.co/edit/eEtaGH?p=preview
    Bootstrap modal from http://angular-ui.github.io/bootstrap/#/top
    http://stackoverflow.com/questions/15324039/how-to-create-a-url-for-link-helper-in-angularjjs

    There are numerous approaches...a custom directive or ng-click to modify $location, or using a function in ng-href to parse the url from object and have it placed as href in an <a>
        tag.

        Example using ng-href:

        HTML:

        <li ng-repeat="item in items">
            <a ng-href="{{url(item)}}">{{item.txt}}</a>
        </li>
        JS:

        function Ctrl($scope){
        $scope.items=[
        {id:1,txt:'foo'},
        {id:2,txt:'bar'}
        ];

        $scope.url=function(item){
        return '#/'+item.id
        }
        }
        Example using ng-click and $location

        HTML:

        <a ng-click="newPath(item)">{{item.txt}}</a>
        JS:

        function Ctrl($scope){
        $scope.items=[
        {id:1,txt:'foo'},
        {id:2,txt:'bar'}
        ];

        $scope.newPath=function(item){
        $location.path('/'+item.id)
        }
        }
        DEMO: http://jsbin.com/ovemaq/3

        share|improve this answer*@
        
